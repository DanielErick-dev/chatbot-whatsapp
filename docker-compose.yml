
services:
  evolution-api:
    container_name: evolution-api
    image: atendai/evolution-api:v1.8.5
    restart: always
    ports:
      - "8080:8080"
    env_file:
      - .env
    volumes:
      - evolution_instances:/evolution/instances
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  postgres:
    container_name: postgres
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: redis
    image: redis:latest
    command: redis-server --port 6379 --appendonly yes
    restart: always
    volumes:
      - redis:/data
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "sh", "-c", "redis-cli ping || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
  bot:
    container_name: bot
    build: .
    restart: always
    ports:
      - "8000:8000"
    depends_on:
      - evolution-api
      - redis
    env_file:
      - .env
    volumes:
      - ./vectorstore_data:/app/vectorstore
      - ./rag_files:/app/rag_files

volumes:
  evolution_instances:
  postgres_data:
  redis:
  vectorstore_data:
  rag_files:
